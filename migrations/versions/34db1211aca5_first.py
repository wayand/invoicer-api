"""first

Revision ID: 34db1211aca5
Revises: 
Create Date: 2022-03-31 23:10:09.035885

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '34db1211aca5'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('currency_id', sa.String(length=10), nullable=False),
    sa.Column('locale_id', sa.String(length=11), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('icon', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('revoked_tokens',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organizations',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('registration_no', sa.String(length=50), server_default='', nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('logo', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('street', sa.String(length=100), nullable=True),
    sa.Column('zipcode', sa.String(length=10), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    acc_types_seq = sa.Sequence('account_types_id_seq')
    op.execute(sa.schema.CreateSequence(acc_types_seq))
    op.create_table('account_types',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), acc_types_seq, server_default=acc_types_seq.next_value(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('normal_balance', sa.String(length=100), nullable=False),
    sa.Column('report_type', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('organization_id', 'name'),
    sa.UniqueConstraint('id')
    )
    clients_seq = sa.Sequence('clients_id_seq')
    op.execute(sa.schema.CreateSequence(clients_seq))
    op.create_table('clients',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), clients_seq, server_default=clients_seq.next_value(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('registration_no', sa.String(length=50), server_default='', nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('logo', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('street', sa.String(length=100), nullable=True),
    sa.Column('zipcode', sa.String(length=10), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('archived', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('contactperson_name', sa.String(length=255), nullable=True),
    sa.Column('contactperson_email', sa.String(length=255), nullable=True),
    sa.Column('type', sa.String(length=10), server_default='company', nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('organization_id', 'name', 'registration_no'),
    sa.UniqueConstraint('id')
    )
    tax_rates_seq = sa.Sequence('tax_rates_id_seq')
    op.execute(sa.schema.CreateSequence(tax_rates_seq))
    op.create_table('tax_rates',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), tax_rates_seq, server_default=tax_rates_seq.next_value(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('abbreviation', sa.String(length=10), nullable=False),
    sa.Column('applies_to_purchases', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('applies_to_sales', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('description', sa.String(length=200), server_default='', nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_predefined', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('net_amount_meta_field_id', sa.Integer(), nullable=True),
    sa.Column('predefined_tag', sa.String(length=100), server_default='', nullable=False),
    sa.Column('rate', sa.Numeric(), server_default='0', nullable=False),
    sa.Column('tax_rate_group', sa.String(length=100), server_default='danish', nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('organization_id', 'name', 'abbreviation'),
    sa.UniqueConstraint('id')
    )
    users_seq = sa.Sequence('users_id_seq')
    op.execute(sa.schema.CreateSequence(users_seq))
    op.create_table('users',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), users_seq, server_default=users_seq.next_value(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('owner', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('is_two_factor_auth', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('otp_secret', sa.String(length=16), nullable=False),
    sa.Column('otp_secret_temp', sa.String(length=16), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('organization_id', 'email'),
    sa.UniqueConstraint('id')
    )
    acc_groups_seq = sa.Sequence('account_groups_id_seq')
    op.execute(sa.schema.CreateSequence(acc_groups_seq))
    op.create_table('account_groups',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), acc_groups_seq, server_default=acc_groups_seq.next_value(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('account_type_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('interval_start', sa.Integer(), nullable=False),
    sa.Column('interval_end', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_type_id'], ['account_types.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('organization_id', 'name', 'number'),
    sa.UniqueConstraint('id')
    )
    invoices_seq = sa.Sequence('invoices_id_seq')
    op.execute(sa.schema.CreateSequence(invoices_seq))
    op.create_table('invoices',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), invoices_seq, server_default=invoices_seq.next_value(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('invoice_no', sa.String(length=100), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('invoice_date', sa.Date(), nullable=False),
    sa.Column('duedate', sa.Date(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=3), server_default='0.00', nullable=False),
    sa.Column('gross_amount', sa.Numeric(precision=10, scale=3), server_default='0.00', nullable=False),
    sa.Column('vat_amount', sa.Numeric(precision=10, scale=3), server_default='0.00', nullable=False),
    sa.Column('is_paid', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_sent', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('state', sa.String(length=20), server_default='draft', nullable=False),
    sa.Column('currency_id', sa.String(length=11), server_default='DKK', nullable=False),
    sa.Column('template_id', sa.String(length=100), server_default='1', nullable=False),
    sa.Column('excluding_vat', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('organization_id', 'invoice_no'),
    sa.UniqueConstraint('id')
    )
    accounts_seq = sa.Sequence('accounts_id_seq')
    op.execute(sa.schema.CreateSequence(accounts_seq))
    op.create_table('accounts',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), accounts_seq, server_default=accounts_seq.next_value(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('account_type_id', sa.Integer(), nullable=False),
    sa.Column('account_group_id', sa.Integer(), nullable=False),
    sa.Column('tax_rate_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=100), server_default='', nullable=True),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('currency_id', sa.String(length=10), server_default='DKK', nullable=False),
    sa.Column('bank_id', sa.Integer(), nullable=True),
    sa.Column('bank_registration_number', sa.Integer(), nullable=True),
    sa.Column('bank_account_number', sa.BigInteger(), nullable=True),
    sa.Column('bank_swift_number', sa.String(length=50), server_default='', nullable=True),
    sa.Column('bank_iban_number', sa.String(length=50), server_default='', nullable=True),
    sa.Column('is_bank_account', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_payment_enabled', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_deposit', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_archived', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.ForeignKeyConstraint(['account_group_id'], ['account_groups.id'], ),
    sa.ForeignKeyConstraint(['account_type_id'], ['account_types.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['tax_rate_id'], ['tax_rates.id'], ),
    sa.PrimaryKeyConstraint('organization_id', 'name', 'number'),
    sa.UniqueConstraint('id')
    )
    op.create_table('invoice_settings',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('default_account_id', sa.Integer(), nullable=False),
    sa.Column('default_deposit_account_id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.String(length=100), server_default='1', nullable=False),
    sa.Column('hide_product_numbers', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('lines_incl_vat', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('invoice_no_mode', sa.String(length=10), server_default='manual', nullable=False),
    sa.Column('next_invoice_no', sa.Integer(), server_default='0', nullable=False),
    sa.Column('default_reminder_fee', sa.Numeric(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['default_account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['default_deposit_account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id')
    )
    products_seq = sa.Sequence('products_id_seq')
    op.execute(sa.schema.CreateSequence(products_seq))
    op.create_table('products',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), products_seq, server_default=products_seq.next_value(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=3), server_default='0.00', nullable=False),
    sa.Column('archived', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('organization_id', 'name'),
    sa.UniqueConstraint('id')
    )
    op.create_table('invoice_lines',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=3), server_default='0.00', nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=3), server_default='0.00', nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=3), server_default='0.00', nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('invoice_lines')
    op.drop_table('products')
    op.drop_table('invoice_settings')
    op.drop_table('accounts')
    op.drop_table('invoices')
    op.drop_table('account_groups')
    op.drop_table('users')
    op.drop_table('tax_rates')
    op.drop_table('clients')
    op.drop_table('account_types')
    op.drop_table('organizations')
    op.drop_table('revoked_tokens')
    op.drop_table('countries')
    # ### end Alembic commands ###
